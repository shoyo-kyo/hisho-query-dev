// ------------------------------
// [name] hq-css-to-map v1.0.0
// [path] /hisho-query/hq-css/_to-map-map
// [desc] ショートハンド指定されているリストをmapに変換
//        対応: margin,padding,border,background,font
// [return] map, list, null
// [exsample]
//   hq-css-to-map("margin", 0 10px 2px 5px)
// ------------------------------


// ------------------------------
// [name] hq-css-to-map-margin
// [desc] ショートハンド指定されているmargin,paddingリストをmapに変換
// ------------------------------
@function hq-css-to-map-margin($list){
	$_result: (
		top:    null,
		right:  null,
		bottom: null,
		left:   null
	);
	
	//numberの場合mapに変換
	@if type-of($list) == number {
		$_result: hq-map-extend($_result, (
			top:    $list,
			right:  $list,
			bottom: $list,
			left:   $list
		));
		@return $_result;

	//listの場合mapに変換
	}@else if type-of($list) == list {

		$_len:  length($list);

		@if $_len == 2{
			$_result: hq-map-extend($_result, (
				top:    nth($list, 1),
				right:  nth($list, 2),
				bottom: nth($list, 1),
				left:   nth($list, 2)
			));

		} @else if $_len == 3{
			$_result: hq-map-extend($_result, (
				top:    nth($list, 1),
				right:  nth($list, 2),
				bottom: nth($list, 3),
				left:   nth($list, 2)
			));

		} @else if $_len == 4{
			$_result: hq-map-extend($_result, (
				top:    nth($list, 1),
				right:  nth($list, 2),
				bottom: nth($list, 3),
				left:   nth($list, 4)
			));
		}
		@return $_result;
	
	//以外の場合は空のresult
	}@else{
		@return $_result;
	}
}

// ------------------------------
// [name] hq-css-to-map-border
// [desc] ショートハンド指定されているborderリストをmapに変換
// [return] map
// ------------------------------
@function hq-css-to-map-border-setter($value){
	@if type-of($value) == color{
		@return (color: $value);

	}@else if type-of($value) == number{
		@return (width: $value);
	
	}@else if type-of($value) == string and hq-str-match($value,"/thin|medium|thick/"){
		@return (width: $value);

	}@else if type-of($value) == string{
		@return (style: $value);

	}@else{
		@return ();
	}
}
@function hq-css-to-map-border($list){
	$_result: (
		style:    null,
		width:  null,
		color: null
	);
	//list形式
	@if type-of($list) == list{
		@each $_v in $list{
			$_result: hq-map-extend($_result, hq-css-to-map-border-setter($_v));
		}
	//単一指定
	}@else{
		$_result: hq-map-extend($_result, hq-css-to-map-border-setter($list));
	}
	@return $_result;
}

// ------------------------------
// [name] hq-css-to-map-background
// [desc] ショートハンド指定されているbackgroundリストをmapに変換
// [return] map
// ------------------------------
@function hq-css-to-map-background-setter($value){
	@if type-of($value) == color{
		@return (color: $value);
	
	}@else if type-of($value) == string and hq-str-match($value,"/url\(.*\)/"){
		@return (image: $value);

	}@else if type-of($value) == string and hq-str-match($value,"repeat"){
		@return (repeat: $value);

	}@else if type-of($value) == string and hq-str-match($value,"/fixed|scroll/"){
		@return (attachment: $value);

	}@else{
		@return ();
	}
}
@function hq-css-to-map-background($list){
	$_result: (
		color: null,
		image: null,
		repeat: null,
		attachment: null,
		position: null
	);
	$_number1: null;
	$_number2: null;
	//list形式
	@if type-of($list) == list{
		@each $_v in $list{
			@if type-of($_v) == number{
				@if $_number1 == null{
					$_number1: $_v;
				}@else if $_number2 == null{
					$_number2: $_v;
				}
			}@else{
				$_result: hq-map-extend($_result, hq-css-to-map-background-setter($_v));
			}
		}
		@if $_number1 and $_number2{
			$_result: hq-map-extend($_result, (
				position: $_number1 $_number2
			));
		}
	//単一指定
	}@else{
		$_result: hq-map-extend($_result, hq-css-to-map-background-setter($list));
	}
	@return $_result;
}

// ------------------------------
// [name] hq-css-to-map-font
// [desc] ショートハンド指定されているfontリストをmapに変換
// [return] map
// ------------------------------
@function hq-css-to-map-font-setter($value){
	@if type-of($value) == color{
		@return (color: $value);
	
	//}@else if type-of($value) == number and hq-str-match($value,"/100|200|300|400|500|600|700|800|900/"){
	//	@return (weight: $value);

	}@else if type-of($value) == number{
		@return (size: $value);

	}@else if type-of($value) == string and hq-str-match($value,"/normal|bold|lighter|bolder/"){
		@return (weight: $value);

	}@else if type-of($value) == string and hq-str-match($value,"/normal|italic|oblique/"){
		@return (style: $value);

	}@else if type-of($value) == string and hq-str-match($value,"/normal|small-caps/"){
		@return (variant: $value);

	}@else if type-of($value) == string and hq-str-match($value,"/\//"){
		@return (size: hq-str-split($value, "/", 0));
		@return (line-height: hq-str-split($value, "/", 1));

	}@else if type-of($value) == string{
		@return (family: $value);

	}@else{
		@return ();
	}
}
@function hq-css-to-map-font($list){
	$_result: (
		size:    null,
		line-height:  null,
		style: null,
		variant: null,
		weight: null,
		family: null
	);
	//list形式
	@if type-of($list) == list{
		@each $_v in $list{
			$_result: hq-map-extend($_result, hq-css-to-map-font-setter($_v));
		}
	//単一指定
	}@else{
		$_result: hq-map-extend($_result, hq-css-to-map-font-setter($list));
	}
	@return $_result;
}

// ------------------------------
// [name] hq-css-to-map-list-style
// [desc] ショートハンド指定されているfontリストをmapに変換
// [return] map
// ------------------------------
@function hq-css-to-map-list-style-setter($value){

	
	@if type-of($value) == string and hq-str-match($value,"/outside|inside/"){
		@return (position: $value);

	}@else if type-of($value) == string and hq-str-match($value,"/url\(.*\)/"){
		@return (image: $value);

	}@else if type-of($value) == string{
		@return (type: $value);

	}@else{
		@return ();
	}
}
@function hq-css-to-map-list-style($list){
	$_result: (
		type:    null,
		image:  null,
		position: null
	);
	
	//list形式
	@if type-of($list) == list{
		@each $_v in $list{
			$_result: hq-map-extend($_result, hq-css-to-map-list-style-setter($_v));
		}
	//単一指定
	}@else{
		$_result: hq-map-extend($_result, hq-css-to-map-list-style-setter($list));
	}
	@return $_result;
}


// ------------------------------
// [name] hq-css-to-map
// ------------------------------
@function hq-css-to-map($type, $list){
	//mapの場合
	@if type-of($list) == map{
		@return $list;

	//margin-padding
	}@else if $type == "margin" or $type == "padding" {
		@return hq-css-to-map-margin($list);

	//border
	}@else if $type == "border" or $type == "outline"{
		@return hq-css-to-map-border($list);

	//background
	}@else if $type == "background"{
		@return hq-css-to-map-background($list);

	//font
	}@else if $type == "font"{
		@return hq-css-to-map-font($list);
	
	//list-style
	}@else if $type == "list-style"{
		@return hq-css-to-map-list-style($list);

	//非対応のtypeはまま返す
	}@else{
		@return $list;
	}
}