// ------------------------------
// [name] hq-css-to-short v1.0.0
// [path] /hisho-query/hq/css/_to-short-map
// [desc] map指定されているcssをショートハンドに変換
//        対応: margin,padding,border,background,font
// [return] map, list, null
// [exsample]
//   hq-css-to-short("margin", 0 10px 2px 5px)
// ------------------------------


// ------------------------------
// [name] hq-css-to-short
// ------------------------------
@function hq-css-to-short($map, $type){
	//listの場合
	@if type-of($map) == "list"{
		@return $map;

	//margin-padding
	}@else if $type == "margin" or $type == "padding" {
		@return hq-css-to-short-margin($map);

	//border
	}@else if $type == "border" or $type == "outline"{
		@return hq-css-to-short-border($map);

	//background
	}@else if $type == "background"{
		@return hq-css-to-short-background($map);

	//font
	}@else if $type == "font"{
		@return hq-css-to-short-font($map);

	//list-style
	}@else if $type == "list-style"{
		@return hq-css-to-short-list-style($map);

	//非対応のtypeはまま返す
	}@else{
		@return $map;
	}
}

// ------------------------------
// [name] hq-css-to-short-margin
// [desc] map指定されているリストをshorthandに変換
// [return] map
// ------------------------------
@function hq-css-to-short-margin($map){
	$_target: top,right,left,bottom;
	$_isSet: true;
	$_result: ();
	
	//map内容をチェック
	@each $_v in $_target{
		@if map-get($map,$_v) == null{
			$_isSet: false;
		}
	}
	
	//対象
	@if $_isSet{

		$_top: map-get($map,"top");
		$_right: map-get($map,"right");
		$_bottom: map-get($map,"bottom");
		$_left: map-get($map,"left");

		$_isAll: if( $_left == $_right and $_top == $_bottom and $_top == $_right, true, false );
		$_isX: if( $_left == $_right, true, false );
		$_isY: if( $_top == $_bottom, true, false );
		$_type: null;

		//値が全て一致
		@if $_isAll == true{
			@return $_top;
		//値が不一致
		}@else if $_isX == false and $_isY == false{
			$_result: append($_result, $_top);
			$_result: append($_result, $_right);
			$_result: append($_result, $_bottom);
			$_result: append($_result, $_left);
			$_result: join((), $_result, space);
			@return $_result;
		//横のみ一致
		}@else if $_isX == true and $_isY == false{
			$_result: append($_result, $_top);
			$_result: append($_result, $_right);
			$_result: append($_result, $_bottom);
			$_result: join((), $_result, space);
			@return $_result;
		//縦のみ一致
		}@else if $_isX == false and $_isY == true{
			$_result: append($_result, $_top);
			$_result: append($_result, $_right);
			$_result: append($_result, $_bottom);
			$_result: append($_result, $_left);
			$_result: join((), $_result, space);
			@return $_result;
		//縦一致＆横一致
		}@else if $_isX == true and $_isY == true{
			$_result: append($_result, $_top);
			$_result: append($_result, $_right);
			$_result: join((), $_result, space);
			@return $_result;
		}
	
	//非対象
	}@else{
		@return null;
	}
}

// ------------------------------
// [name] hq-css-to-short-border
// [desc] map指定されているリストをshorthandに変換
// [return] map
// ------------------------------
@function hq-css-to-short-border($map){
	$_target: style,width,color;
	$_isSet: true;
	$_result: ();
	
	//対象以外の値があるかチェック
	@each $_k, $_v in $map{
		@if index($_target,$_k) == false{
			$_isSet: false;
		}
	}
	//対象
	@if $_isSet {
		@each $_v in $_target{
			@if map-get($map,$_v) {
				$_result: append($_result, map-get($map,$_v));
			}
		}
		$_result: join((), $_result, space);
		@return $_result;
	//非対象
	}@else{
		@return null;
	}
}

// ------------------------------
// [name] hq-css-to-short-background
// [desc] map指定されているリストをshorthandに変換
// [return] map
// ------------------------------
@function hq-css-to-short-background($map){
	$_target: image,repeat,position,attachment,color;
	$_isSet: true;
	$_result: ();
	
	//対象以外の値があるかチェック
	@each $_k, $_v in $map{
		@if index($_target,$_k) == false{
			$_isSet: false;
		}
	}
	//対象
	@if $_isSet {
		@each $_v in $_target{
			@if map-get($map,$_v) {
				$_result: append($_result, map-get($map,$_v));
			}
		}
		$_result: join((), $_result, space);
		@return $_result;
	//非対象
	}@else{
		@return null;
	}
}

// ------------------------------
// [name] hq-css-to-short-font
// [desc] map指定されているリストをshorthandに変換
// [return] map
// ------------------------------
@function hq-css-to-short-font($map){
	$_target: style,variant,weight,size,line-height,family;
	$_isSet: true;
	$_result: ();
	
	//対象以外の値があるかチェック
	@each $_k, $_v in $map{
		@if index($_target,$_k) == false{
			$_isSet: false;
		}
	}
	//対象
	@if $_isSet {
		$_style: map-get($map,"style");
		$_variant: map-get($map,"variant");
		$_weight: map-get($map,"weight");
		$_size: map-get($map,"size");
		$_line: map-get($map,"line-height");
		$_family: map-get($map,"family");

		@if $_style{
			$_result: append($_result, $_style);
		}
		@if $_variant{
			$_result: append($_result, $_variant);
		}
		@if$_weight{
			$_result: append($_result, $_weight);
		}

		@if $_size and $_line{
			$_result: append($_result, hq("str.unquote", $_size + "/" + $_line) );
		}@else if $_size and $_line == null{
			$_result: append($_result, $_size);
		}

		@if $_family{
			$_result: append($_result, $_family);
		}
		
		$_result: join((), $_result, space);
		@return $_result;
	//非対象
	}@else{
		@return null;
	}
}

// ------------------------------
// [name] hq-css-to-short-list-style
// [desc] ショートハンド指定されているリストをmapに変換
// [return] map
// ------------------------------
@function hq-css-to-short-list-style($map){
	$_target: image,type,position;
	$_isSet: true;
	$_result: ();
	
	//対象以外の値があるかチェック
	@each $_k, $_v in $map{
		@if index($_target,$_k) == false{
			$_isSet: false;
		}
	}
	//対象
	@if $_isSet {
		@each $_v in $_target{
			@if map-get($map,$_v) {
				$_result: append($_result, map-get($map,$_v));
			}
		}
		$_result: join((), $_result, space);
		@return $_result;
	//非対象
	}@else{
		@return null;
	}
}
