@charset "utf-8";

@import "hisho-query/_hquery-0.1.1";
@import "test/hq-test.scss";


//--------------------------------
// hq("css.xxx",$arg)
// css method
//--------------------------------
.hq-str{
	
	//str.unquote ============================================
	method: "str.unquote";
	$test:(
		"unquote-1": (
			request : hq("str.unquote", "hogehoge"),
			result  : hogehoge,
		),
		"unquote-2": (
			request : hq("str.unquote", hogehoge),
			result  : hogehoge,
		),
		"quote-1": (
			request : hq("str.quote", "hogehoge"),
			result  : "hogehoge",
		),
		"quote-2": (
			request : hq("str.quote", hogehoge),
			result  : "hogehoge",
		),
		"length-1": (
			request : hq("str.length", "hogehoge"),
			result  : 8,
		),
		"length-2": (
			request : hq("str.length", hogehoge),
			result  : 8,
		),
		"insert-1": (
			request : hq("str.insert", "hogehoge",hoge,5),
			result  : hogehogehoge,
		),
		"insert-2": (
			request : hq("str.insert", hogehoge,hoge,5),
			result  : hogehogehoge,
		),
		"index-1": (
			request : hq("str.index", "hogehoge", "g"),
			result  : 3,
		),
		"index-2": (
			request : hq("str.index", hogehoge, "g"),
			result  : 3,
		),
		"slice-1": (
			request : hq("str.slice", "hogehoge", 1, 3),
			result  : hog,
		),
		"slice-2": (
			request : hq("str.slice", hogehoge, 1, 3),
			result  : hog,
		),
		"upcase-1": (
			request : hq("str.upcase", "hogehogeHOGE"),
			result  : HOGEHOGEHOGE,
		),
		"upcase-2": (
			request : hq("str.upcase", hogehogeHOGE),
			result  : HOGEHOGEHOGE,
		),
		"downcase-1": (
			request : hq("str.downcase", "hogehogeHOGE"),
			result  : hogehogehoge,
		),
		"downcase-2": (
			request : hq("str.downcase", hogehogeHOGE),
			result  : hogehogehoge,
		),
		"capitalize-1": (
			request : hq("str.capitalize", "hogehogeHOGE"),
			result  : Hogehogehoge,
		),
		"capitalize-2": (
			request : hq("str.capitalize", hogehogeHOGE),
			result  : Hogehogehoge,
		),
		"flUpcase-1": (
			request : hq("str.flUpcase", "hogehogeHOGE"),
			result  : HogehogeHOGE,
		),
		"flUpcase-2": (
			request : hq("str.flUpcase", hogehogeHOGE),
			result  : HogehogeHOGE,
		),
		"flDowncase-1": (
			request : hq("str.flDowncase", "HogehogeHOGE"),
			result  : hogehogeHOGE,
		),
		"flDowncase-2": (
			request : hq("str.flDowncase", HogehogeHOGE),
			result  : hogehogeHOGE,
		),
		"strip-1": (
			request : hq("str.strip", "   Hogehoge HOGE  "),
			result  : "Hogehoge HOGE",
		),
		"strip-2": (
			request : hq("str.strip", HogehogeHOGE    ),
			result  : HogehogeHOGE,
		),
		"succ-1": (
			request : hq("str.succ", "hogehogeHOGE"),
			result  : hogehogeHOGF,
		),
		"succ-2": (
			request : hq("str.succ", hogehogeHOGE),
			result  : hogehogeHOGF,
		),
		"match-1": (
			request : hq("str.match", "hogehogeHOGE", "hoge"),
			result  : true,
		),
		"match-2": (
			request : hq("str.match", "hogehogeHOGE", "HOGE"),
			result  : true,
		),
		"match-3": (
			request : hq("str.match", "hogehogeHOGE", "fuga"),
			result  : false,
		),
		"match-4": (
			request : hq("str.match", "hogehogeHOGE", "/^h.*E$/"),
			result  : true,
		),
		"match-5": (
			request : hq("str.match", "hogehogeHOGE", "/^h.*e$/"),
			result  : false,
		),
		"match-6": (
			request : hq("str.match", "hogehogeHOGE", "/^f.*e$/"),
			result  : false,
		),
		"replace-1": (
			request : hq("str.replace", "hogehogeHOGE", "hoge", "fuga"),
			result  : "fugahogeHOGE",
		),
		"replace-2": (
			request : hq("str.replace", "hogehogeHOGE", "HOGE", "fuga"),
			result  : "hogehogefuga",
		),
		"replace-3": (
			request : hq("str.replace", "hogehogeHOGE", "fuga", "fuga"),
			result  : "hogehogeHOGE",
		),
		"replace-4": (
			request : hq("str.replace", "hogehogeHOGE", "/^h(.*)E$/", "fuga"),
			result  : "fuga",
		),
		"replace-5": (
			request : hq("str.replace", "hogehogeHOGE", "/^h.*e$/", "fuga"),
			result  : "hogehogeHOGE",
		),
		"replace-6": (
			request : hq("str.replace", "hogehogeHOGE", "/^f.*e$/", "fuga"),
			result  : "hogehogeHOGE",
		),
		"replace-7": (
			request : hq("str.replace", "hogehogeHOGE", "/^h(.*)E$/", "a\1a"),
			result  : "aogehogeHOGa",
		),
		"replace-8": (
			request : hq("str.replace", "hogehogeHOGE", "/hoge/", "fuga"),
			result  : "fugafugaHOGE",
		),
		"split-1": (
			request : hq("str.split -> is.list", "hoge hoge HOGE", " "),
			result  : true
		),
		"split-2": (
			request : hq("str.split -> is.list", "hoge,hoge,HOGE", "|"),
			result  : true,
		),
		"reverse-1": (
			request : hq("str.reverse", "hogehogeHOGE"),
			result  : "EGOHegohegoh",
		),
		"reverse-2": (
			request : hq("str.reverse", 1, "hoge"),
			result  : null,
		),
		
	);
	$a: hq-test("hq-str", $test);

}
